# Use Ruby 3.1 on Debian Bullseye for better compatibility
FROM ruby:3.1-bullseye

# Install required system packages
RUN apt-get update && apt-get install -y \
    wget \
    unzip \
    libaio1 \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Download and install Oracle Instant Client
WORKDIR /opt/oracle
RUN wget https://download.oracle.com/otn_software/linux/instantclient/1913000/instantclient-basic-linux.x64-19.13.0.0.0dbru.zip && \
    wget https://download.oracle.com/otn_software/linux/instantclient/1913000/instantclient-sdk-linux.x64-19.13.0.0.0dbru.zip && \
    unzip instantclient-basic-linux.x64-19.13.0.0.0dbru.zip && \
    unzip instantclient-sdk-linux.x64-19.13.0.0.0dbru.zip && \
    rm *.zip

# Set up Oracle environment
RUN cd /opt/oracle/instantclient_19_13 && \
    ln -sf libclntsh.so.19.1 libclntsh.so && \
    ln -sf libocci.so.19.1 libocci.so && \
    echo /opt/oracle/instantclient_19_13 > /etc/ld.so.conf.d/oracle.conf && \
    ldconfig

# Set environment variables for Oracle
ENV ORACLE_HOME=/opt/oracle/instantclient_19_13
ENV LD_LIBRARY_PATH=/opt/oracle/instantclient_19_13
ENV PATH=/opt/oracle/instantclient_19_13:$PATH

# Set working directory
WORKDIR /app

# Configure bundler and install ruby-oci8
RUN bundle config set --local deployment false && \
    bundle config set --local path vendor/bundle && \
    gem install ruby-oci8 --verbose

# Copy gemspec and Gemfile first
COPY oracle-model-generator.gemspec Gemfile ./

# Install remaining Ruby dependencies (this should work now since ruby-oci8 is already installed)
RUN bundle install --verbose

# Copy the rest of the application
COPY . .

# Create docker test file
COPY test/test_oracle_model_generator_docker.rb test/

# Set default command
CMD ["ruby", "test/test_oracle_model_generator_docker.rb"]

# Expose port for potential server functionality
EXPOSE 3000
